For automatic start and stop of eventlircd during boot and on device dis/reconnect
put the udev rule '70-irmp.rules' into your udev rules directory (/etc/udev/rules.d/) (depending on the kernel),
put the udev rule '98-eventlircd.rules' into your udev rules directory (/etc/udev/rules.d/),
put the evmap '03_1209_4445.evmap' into your evmap directory (/usr/etc/eventlircd.d/),
put the systemd service 'eventlircd.service' into your services directory (/etc/systemd/system/),
put the systemd service 'eventlircd.socket' into your services directory (/etc/systemd/system/),
put the systemd-tmpfiles config file 'eventlircd.conf' into your tmpfiles directory (/etc/tmpfiles.d/),
and run "systemctl enable eventlircd.service eventlircd.socket" once.

If you build your own kernel, you may patch it with hid_irmp.diff, with that repeats work perfectly, when
repeat_timeout is set to e.g. 130.
It may be necessary to put 'rmmod hid_irmp', 'rmmod hid_generic' and 'modprobe hid_irmp' in /etc/init.d/boot.local (look
for "irmp configured" in dmesg) with kernel 4.14.

Without the patch you need to have repeat_timeout set to 15 (default), and all key presses are new keys, so
long key presses in kodi and acceleration are not working.

Instead of hid_irmp.diff you can try stm32kbd2uinput. With stm32kbd2uinput repeats work perfectly.
repeat_timeout stays default (15), repeat_delay and repeat_period are 100 (or less).

You want to know, if the computer was started by the receiver?
stm32kbd2uinput writes each start by the receiver into the log file /var/log/started_by_IRMP_STM32_KBD.
If 'stat -c %Y /var/log/started_by_IRMP_STM32_KBD' is greater than 'stat -c %Y /var/log/boot.msg', the
computer was started by the receiver.
You may use this in VDR's shutdownscript in order to not shut down on the first power key press, if the
computer is already running. See the example script.
This is handy if you have a remote control with macros as the logitech and use one button to power
on not only VDR but other devices as well.
